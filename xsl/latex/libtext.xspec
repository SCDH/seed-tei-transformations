<?xml version="1.0" encoding="UTF-8"?>
<x:description xmlns:x="http://www.jenitennison.com/xslt/xspec"
    xmlns:map="http://www.w3.org/2005/xpath-functions/map"
    xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ht="http://www.w3.org/1999/xhtml"
    xmlns:tei="http://www.tei-c.org/ns/1.0" xmlns:app="http://scdh.wwu.de/transform/app#"
    xmlns:text="http://scdh.wwu.de/transform/text#" xmlns:t="http://www.tei-c.org/ns/1.0"
    xmlns:edmac="http://scdh.wwu.de/transform/edmac#" stylesheet="libtext.xsl" run-as="external">

    <x:variable name="x:saxon-config" href="../../saxon.he.xml"/>

    <x:variable name="tei-text">
        <TEI xmlns="http://www.tei-c.org/ns/1.0" xml:lang="de">
            <teiHeader>
                <fileDesc>
                    <titleStmt>
                        <title>Test</title>
                    </titleStmt>
                </fileDesc>
                <encodingDesc>
                    <variantEncoding method="parallel-segmentation" location="internal"/>
                </encodingDesc>
            </teiHeader>
            <text xml:id="the-text">
                <front>
                    <div>
                        <head>Vorrede</head>
                        <p>Der hochwohlgebohrenen Prinzessin Z.</p>
                    </div>
                </front>
                <body>
                    <lg>
                        <l>Du siehst, wohin du siehst, <caesura/> nur eitelkeit auf erden.</l>
                        <l>Was dieser heute baut, <caesura/> reißt jener morgen ein,</l>
                        <l>Wo jetz und städte stehn, <caesura/> wird eine wiese sein,</l>
                        <l>Auf der ein schäfers kind <caesura/> wird spielen mit den herden.</l>
                    </lg>
                </body>
            </text>
        </TEI>
    </x:variable>

    <x:scenario label="hemistiches in test document">
        <x:context select="$tei-text" mode="text:text"/>
        <x:expect label="starts numbering"
            test="matches(., '^\s*%% begin of text body&#xa;\\beginnumbering')"/>
        <x:expect label="has verse 1"
            test="matches(., '\\stanza\\relax %&#xa;Du siehst, wohin du siehst, \\caesura\{\} nur eitelkeit auf erden.&amp;%&#xa;')"/>
        <x:expect label="has verse 2"
            test="matches(., 'Was dieser heute baut, \\caesura\{\} reißt jener morgen ein,&amp;%&#xa;')"/>
        <x:expect label="has verse 3"
            test="matches(., 'Wo jetz und städte stehn, \\caesura\{\} wird eine wiese sein,&amp;%&#xa;')"/>
        <x:expect label="has verse 4"
            test="matches(., 'Auf der ein schäfers kind \\caesura\{\} wird spielen mit den herden.\\&amp;%&#xa;')"/>
        <x:expect label="ends numbering"
            test="matches(., '%% end of text body&#xa;\\endnumbering\s+$')"/>
    </x:scenario>

    <x:scenario label="single verse">
        <x:context mode="text:text">
            <tei:l>Du siehst, wohin du <tei:hi>siehst, <tei:caesura/> nur</tei:hi> eitelkeit auf
                erden.</tei:l>
        </x:context>
        <x:expect label="is treated as a stanza"
            test="matches(., '\\stanza\\relax %&#xa;Du siehst, wohin du siehst, \\caesura\{\} nur eitelkeit auf erden.\\&amp;%\s+')"
        />
    </x:scenario>

    <x:scenario label="multiple verses">
        <x:context mode="text:text">
            <tei:lg>
                <tei:l>Du siehst, wohin du <tei:hi>siehst, <tei:caesura/> nur</tei:hi> eitelkeit auf
                    erden.</tei:l>
                <tei:l>Was dieser heute baut, <tei:caesura/> reißt jener morgen ein,</tei:l>
            </tei:lg>
        </x:context>
        <x:expect label="has verse ending and stanza ending"
            test="matches(., '\\stanza\\relax %&#xa;Du siehst, wohin du siehst, \\caesura\{\} nur eitelkeit auf\s+erden.&amp;%\s+Was dieser heute baut, \\caesura\{\} reißt jener morgen ein,\\&amp;%\s+')"
        />
    </x:scenario>

    <x:scenario label="multiple verses in internal double end point app">
        <x:context mode="text:text">
            <tei:variantEncoding method="double-end-point" location="internal"/>
            <tei:anchor xml:id="a1"/>
            <tei:lg>
                <tei:l>Du siehst, wohin du <tei:hi>siehst, <tei:caesura/> nur</tei:hi> eitelkeit auf
                    erden.</tei:l>
                <tei:l>Was dieser heute baut, <tei:caesura/> reißt jener morgen ein,</tei:l>
            </tei:lg>
            <tei:app from="#a1">
                <tei:rdg wit="B">Und nun?</tei:rdg>
            </tei:app>
        </x:context>
        <x:expect label="has verse ending and stanza ending"
            test="matches(., 'Du siehst, wohin du siehst, \\caesura\{\} nur eitelkeit auf\s+erden.&amp;%\s+Was dieser heute baut, \\caesura\{\} reißt jener morgen ein,\\&amp;')"/>
        <x:expect label="has preferred start macro from anchor"
            test="matches(., '^\s*\\stanza\\relax %preferred from tei:anchor&#xa;')"/>
        <x:expect label="has edlabel from anchor" test="matches(., '\\edlabel\{a1\}Du')"/>
        <x:expect label="delayed end macro from app"
            test="matches(., 'ein,\\&amp;%\s?delayed from tei:app\s+$')"/>
        <x:expect label="preferred start macro from anchor is inside stanza"
            test="matches(., '^\s*\\stanza')"/>
    </x:scenario>

    <x:scenario label="douple end point apparatus, single missing verse in stanza">
        <x:context mode="text:text">
            <tei:variantEncoding method="double-end-point" location="internal"/>
            <tei:lg>
                <tei:l>Du siehst, wohin du <tei:hi>siehst, <tei:caesura/> nur</tei:hi> eitelkeit auf
                    erden.</tei:l>
                <tei:anchor xml:id="a2"/>
                <tei:l>Was dieser heute baut, <tei:caesura/> reißt jener morgen ein,</tei:l>
                <tei:app from="#a2">
                    <tei:rdg wit="B"/>
                </tei:app>
            </tei:lg>
        </x:context>
        <x:expect label="has verse ending and stanza ending and label from anchor"
            test="matches(., '\\stanza\\relax %&#xa;Du siehst, wohin du siehst, \\caesura\{\} nur eitelkeit auf\s+erden.&amp;%\s+\\edlabel\{a2\}Was dieser heute baut, \\caesura\{\} reißt jener morgen ein,\\&amp;')"/>
        <x:expect label="no delayed end macro from app" test="matches(., 'ein,\\&amp;%\s+$')"/>
    </x:scenario>

    <x:scenario label="parallel segmentation apparatus, single missing verse in stanza">
        <x:context mode="text:text">
            <tei:variantEncoding method="parallel-segmentation" location="internal"/>
            <tei:lg>
                <tei:l>Du siehst, wohin du <tei:hi>siehst, <tei:caesura/> nur</tei:hi> eitelkeit auf
                    erden.</tei:l>
                <tei:app xml:id="a3">
                    <tei:lem>
                        <tei:l>Was dieser heute baut, <tei:caesura/> reißt jener morgen ein,</tei:l>
                    </tei:lem>
                    <tei:rdg wit="B"/>
                </tei:app>
            </tei:lg>
        </x:context>
        <x:expect label="has verse ending and stanza ending and label from anchor"
            test="matches(., '\\stanza\\relax %&#xa;Du siehst, wohin du siehst, \\caesura\{\} nur eitelkeit auf\s+erden.&amp;%\s+\\edlabel\{a3-start\}Was dieser heute baut, \\caesura\{\} reißt jener morgen ein,\\&amp;')"/>
        <x:expect label="no delayed end macro from app" test="matches(., 'ein,\\&amp;%\s+$')"/>
    </x:scenario>

    <x:scenario label="double end-point apparatus around several block elements">
        <x:context mode="text:text">
            <tei:variantEncoding method="double-end-point" location="internal"/>
            <tei:anchor xml:id="a3"/>
            <tei:p>Ein Barock-Gedicht weiß:</tei:p>
            <tei:lg>
                <tei:l>Du siehst, wohin du <tei:hi>siehst, <tei:caesura/> nur</tei:hi> eitelkeit auf
                    erden.</tei:l>
            </tei:lg>
            <tei:app from="#a3">
                <tei:rdg wit="B"/>
            </tei:app>
        </x:context>
        <x:expect label="paragraph with preferred \pstart and regular \pend"
            test="matches(., '^\s*\\pstart\{\}%preferred from tei:anchor&#xa;\\edlabel\{a3\}Ein\s+Barock-Gedicht\s+weiß:&#xa;\\pend %&#xa;')"/>
        <x:expect label="verse with regular \stanza and delayed \&amp;"
            test="matches(., '\\stanza\\relax %&#xa;Du\s+siehst,\s+wohin\s+du\s+siehst,\s+\\caesura\{\}\s+nur\s+eitelkeit\s+auf\s+erden.\\&amp;%delayed from tei:app&#xa;\s*$')"
        />
    </x:scenario>

    <x:scenario label="double end-point apparatus around several block elements in other order">
        <x:context mode="text:text">
            <tei:variantEncoding method="double-end-point" location="internal"/>
            <tei:anchor xml:id="a3"/>
            <tei:lg>
                <tei:l>Du siehst, wohin du <tei:hi>siehst, <tei:caesura/> nur</tei:hi> eitelkeit auf
                    erden,</tei:l>
            </tei:lg>
            <tei:p>weiß ein Barock-Gedicht.</tei:p>
            <tei:app from="#a3">
                <tei:rdg wit="B"/>
            </tei:app>
        </x:context>
        <x:expect label="verse with preferred \stanza and regular \&amp;"
            test="matches(., '^\s*\\stanza\\relax %preferred from tei:anchor&#xa;\\edlabel\{a3\}Du\s+siehst,\s+wohin\s+du\s+siehst,\s+\\caesura\{\}\s+nur\s+eitelkeit\s+auf\s+erden,\\&amp;%&#xa;')"/>
        <x:expect label="paragraph with regular \pstart and delayed \pend"
            test="matches(., '\\pstart\{\}%&#xa;weiß\s+ein\s+Barock-Gedicht.&#xa;\s*\\pend %delayed from tei:app&#xa;\s*$')"
        />
    </x:scenario>


    <x:scenario label="sic">
        <x:context mode="text:text">
            <tei:p>The quick <tei:sic>braun</tei:sic> fox</tei:p>
        </x:context>
        <x:expect label="has start label"
            test="matches(., '\\pstart\{\}%&#xa;The quick \\edlabel\{[a-zA-Z0-9]+-start\}braun fox\s+\\pend\s*%&#xa;\s*$')"
        />
    </x:scenario>

    <x:scenario label="corr">
        <x:context mode="text:text">
            <tei:p>The quick <tei:corr>brown</tei:corr> fox</tei:p>
        </x:context>
        <x:expect label="has start label"
            test="matches(., '\\pstart\{\}%&#xa;The quick \\edlabel\{[a-zA-Z0-9]+-start\}brown fox\s+\\pend\s*%&#xa;\s*$')"
        />
    </x:scenario>

    <x:scenario label="choice with corr and sic">
        <x:context mode="text:text">
            <tei:p>The quick
                    <tei:choice><tei:sic>braun</tei:sic><tei:corr>brown</tei:corr></tei:choice>
                fox</tei:p>
        </x:context>
        <x:expect label="has start label and text from corr"
            test="matches(., '\\pstart\{\}%&#xa;The\s+quick\s+\\edlabel\{[a-zA-Z0-9]+-start\}brown\s+fox\s+\\pend\s*%&#xa;\s*$')"
        />
    </x:scenario>

    <x:scenario label="gap">
        <x:context mode="text:text">
            <tei:p>The quick brown <tei:gap unit="characters" quatity="2"/>x jumps</tei:p>
        </x:context>
        <x:expect label="has start label and dots"
            test="matches(., '\\pstart\{\}%&#xa;The\s+quick\s+brown\s+\\edlabel\{[a-zA-Z0-9]+-start\}\[\.\.\.\]x\s+jumps\s*\\pend\s*%&#xa;\s*$')"
        />
    </x:scenario>

    <x:scenario label="supplied">
        <x:context mode="text:text">
            <tei:p>The quick brown <tei:supplied>fo</tei:supplied>x jumps</tei:p>
        </x:context>
        <x:expect label="has start label"
            test="matches(., '\\pstart\{\}%&#xa;The\s+quick\s+brown\s+\\edlabel\{[a-zA-Z0-9]+-start\}fox\s+jumps\s*\\pend\s*%&#xa;\s*$')"
        />
    </x:scenario>

    <x:scenario label="span">
        <x:context>
            <tei:l>Auf der ein schäfers kind <tei:caesura/> wird spie<tei:span>
                    <tei:note>Ach!</tei:note>
                </tei:span>len mit den herden.</tei:l>
        </x:context>
        <x:expect label="text from span not in output"
            test="normalize-space() => matches('spielen')"/>
    </x:scenario>




    <!-- tests for stripping whitespace -->

    <x:scenario label="stripping: spaces around caesura" pending="todo">
        <x:param name="edmac:normalization" as="xs:string" select="'space'"/>
        <x:context mode="text:text">
            <tei:l>Du siehst, wohin du siehst, <tei:caesura/> nur eitelkeit auf erden.</tei:l>
        </x:context>
        <x:expect label="is stripped"
            test="matches(., '\\stanza\\relax %&#xa;Du siehst, wohin du siehst,\\caesura\{\}nur eitelkeit auf erden.\\&amp;%\s+')"
        />
    </x:scenario>

    <x:scenario label="stripping: spaces around caesura and at start/end of verse" pending="todo">
        <x:param name="edmac:normalization" as="xs:string" select="'space'"/>
        <x:context mode="text:text">
            <tei:l>&#xa; Du siehst, wohin du siehst, <tei:caesura/> nur eitelkeit auf erden.
            </tei:l>
        </x:context>
        <x:expect label="is stripped"
            test="matches(., '\\stanza\\relax %&#xa;Du siehst, wohin du siehst,\\caesura\{\}nur eitelkeit auf erden.\\&amp;%\s+')"
        />
    </x:scenario>

    <x:scenario label="stripping: space in element at start of verse" pending="todo">
        <x:param name="edmac:normalization" as="xs:string" select="'space'"/>
        <x:context mode="text:text">
            <tei:l><tei:hi>&#xa; Du</tei:hi> siehst, wohin du siehst,<tei:caesura/>nur eitelkeit auf
                erden. </tei:l>
        </x:context>
        <x:expect label="is stripped"
            test="matches(., '\\stanza\\relax %&#xa;Du siehst, wohin du siehst,\\caesura\{\}nur eitelkeit auf erden.\\&amp;%\s+')"
        />
    </x:scenario>

    <x:scenario label="stripping: whitespace text nodes around caesura" pending="todo">
        <x:param name="edmac:normalization" as="xs:string" select="'space'"/>
        <x:context mode="text:text">
            <tei:l>Du siehst, wohin du <tei:hi>siehst, &#xa;</tei:hi>&#xa;<tei:caesura/>&#xa;
                    <tei:hi>&#xa;nur </tei:hi>eitelkeit auf erden. </tei:l>
        </x:context>
        <x:expect label="is stripped"
            test="matches(., '\\stanza\\relax %&#xa;Du siehst, wohin du siehst,\\caesura\{\}nur eitelkeit auf erden.\\&amp;%\s+')"
        />
    </x:scenario>

    <x:scenario label="stripping: space in elements around caesura" pending="todo">
        <x:param name="edmac:normalization" as="xs:string" select="'space'"/>
        <x:context mode="text:text">
            <tei:l>Du siehst, wohin du <tei:hi>siehst, &#xa;</tei:hi><tei:caesura/><tei:hi>&#xa;nur
                </tei:hi>eitelkeit auf erden. </tei:l>
        </x:context>
        <x:expect label="is stripped"
            test="matches(., '\\stanza\\relax %&#xa;Du siehst, wohin du siehst,\\caesura\{\}nur eitelkeit auf erden.\\&amp;%\s+')"
        />
    </x:scenario>

    <x:scenario label="stripping: nested caesura" pending="todo">
        <x:param name="edmac:normalization" as="xs:string" select="'space'"/>
        <x:context mode="text:text">
            <tei:l>Du siehst, wohin du <tei:hi>siehst, <tei:caesura/> nur</tei:hi> eitelkeit auf
                erden.</tei:l>
        </x:context>
        <x:expect label="is stripped"
            test="matches(., '\\stanza\\relax %&#xa;Du siehst, wohin du siehst,\\caesura\{\}nur eitelkeit auf erden.\\&amp;%\s+')"
        />
    </x:scenario>

    <x:scenario label="stripping: nested caesura and whitespace at start/end of verse"
        pending="todo">
        <x:param name="edmac:normalization" as="xs:string" select="'space'"/>
        <x:context mode="text:text">
            <tei:l> Du siehst, wohin du <tei:hi>siehst, <tei:caesura/> nur</tei:hi> eitelkeit auf
                erden. </tei:l>
        </x:context>
        <x:expect label="is stripped"
            test="matches(., '\\stanza\\relax %&#xa;Du siehst, wohin du siehst,\\caesura\{\}nur eitelkeit auf erden.\\&amp;%\s+')"
        />
    </x:scenario>

</x:description>
